<%= render "tickertape" %>
<%= render "chart" %>
<br />
<div class="container">
  <div class="card">
    <div class="card-body">
      <div class="buy-sell-btn">
        <%= link_to "Buy", transactions_buy_path, class:"btn btn-outline-success" %>
        <%= link_to "Sell", transactions_sell_path, class:"btn btn-danger" %>
      </div>

      <%= form_with(model: @transaction, url: transactions_path, method: :post ) do |form| %>
        <% if @transaction.errors.any? %>
          <div style="color: red">
            <h2><%= pluralize(@transaction.errors.count, "error") %> prohibited this @transaction from being saved:</h2>
      
            <ul>
              <% @transaction.errors.each do |error| %>
                <li><%= error.full_message %></li>
              <% end %>
            </ul>
          </div>
        <% end %>
      
        <div class="field mb3">
          <%= form.label :stock, class:"form-label" %>
          <%= form.select :stock, options_for_select(@portfolio.select { |_, data| data[:shares] > 0 }.keys), {}, class: "form-control", id: "stock" %>
          <div id="stockHelp" class="form-text">Select a stock you own</div>
        </div>
      
        <div class="field mb3">
          <%= form.label :price, class:"form-label" %>
          <%= form.number_field :price, step: "0.01", class:"form-control", id: "price", disabled: true %>
        </div>

        <div class="field mb3">
          <%= form.label :shares, class:"form-label" %>
          <%= form.number_field :shares, step: "0.01", min: "0.01", class:"form-control", id: "shares" %>
          <div id="sharesHelp" class="form-text">Available to sell: <span id="availableShares"> </span></div>
        </div>

        <div class="field mb3">
          <%= form.label :amount, class:"form-label" %>
          <%= form.number_field :amount, step: "0.01", class:"form-control", id: "amount", disabled: true %>
        </div>
      
        <div class="field mb3">
          <%= form.number_field :user_id, value: current_user.id, class:"form-control", type: :hidden %>
        </div>

        <div class="field mb3">
          <%= form.text_field :action, value: "sell", class:"form-control", type: :hidden %>
        </div>
        <br />
        <div class="field mb3">
          <%= form.submit "Submit", class:"btn btn-primary" %>
        </div>
      <% end %>

    </div>
  </div>
</div>
<script>
  document.addEventListener('DOMContentLoaded', function() {
    const stockInput = document.getElementById('stock');
    const priceInput = document.getElementById('price');
    const amountInput = document.getElementById('amount');
    const sharesInput = document.getElementById('shares');

    stockInput.addEventListener('input', function() {
      const stockCode = stockInput.value;
      const url = `https://cloud.iexapis.com/v1/stock/${stockCode}/quote?token=pk_8ffc8b1159ea41f08c9167e7d1cea3c7`;

      fetch(url)
        .then(response => response.json())
        .then(data => {
          priceInput.value = data.latestPrice;
        })
        .catch(error => {
          console.error('Error fetching stock price:', error);
        });

      const availableSharesSpan = document.getElementById('availableShares');

      fetch(`/get_available_shares?stock=${stockCode}`)
        .then(response => response.json())
        .then(data => {
          availableSharesSpan.innerText = data.availableShares;
        })
        .catch(error => {
          console.error('Error fetching available shares:', error);
        });
    });

    sharesInput.addEventListener('input', function() {
      const amount = parseFloat(amountInput.value);
      const price = parseFloat(priceInput.value);
      const shares = parseFloat(sharesInput.value);
      if (!isNaN(price) && !isNaN(shares) && shares !== 0) {
        amountInput.value = (shares * price).toFixed(2);
      } else {
        amountInput.value = '';
      }
    });
  });
</script>

